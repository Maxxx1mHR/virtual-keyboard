{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAA8B;;AAE9B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,+CAAY,QAAQ;;AAE3D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,cAAc,EAAC;;;;;;;;;;;;;;;;;ACpC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA,+DAA+D,KAAK;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,GAAG;AACH;AACA;;AAE0C;;;;;;;;;;;;;;;;;;;;;;;;;AC9Dc;AACV;;AAE9C;AACA;AACA,EAAE,EAAE,uCAAI;;AAER;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,kCAAkC,EAAE,8BAA8B;AACxF;AACA;;AAEA;AACA;AACA,sBAAsB,qCAAqC,EAAE,8BAA8B;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iCAAiC,IAAI,8BAA8B;AACzF;AACA;;AAEA;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,uCAAuC,MAAM;AAC7C,IAAI;AACJ,IAAI,2DAAc;AAClB,uCAAuC,MAAM;AAC7C;AACA;;AAEA;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,uCAAuC,MAAM;AAC7C,IAAI;AACJ,IAAI,2DAAc;AAClB,uCAAuC,MAAM;AAC7C;AACA;;AAEA;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,IAAI;AACJ,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,IAAI;AACJ,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA;AACA;;AAYE;;;;;;;;;;;;;;;;;;AC3FyC;AACG;;AAE9C,QAAQ,2BAA2B,EAAE,uCAAI;;AAEzC;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,IAAI;AACJ,IAAI,2DAAc;AAClB;AACA;;AAEA;AACA;AACA,IAAI,2DAAc,CAAC,kDAAW;AAC9B;AACA,IAAI;AACJ,IAAI,2DAAc;AAClB;AACA;;AAEgC;;;;;;;;;;;;;;;;;;ACvBc;AACH;;AAE3C,QAAQ,2BAA2B,EAAE,uCAAI;;AAEzC;AACA;AACA;AACA,IAAI,2DAAc;AAClB,IAAI;AACJ,IAAI,2DAAc;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAc,CAAC,kDAAW;AAClC;AACA;AACA;AACA,QAAQ;AACR,QAAQ,2DAAc;AACtB;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,QAAQ,2DAAc,CAAC,kDAAW;AAClC;AACA;AACA;AACA,QAAQ;AACR,QAAQ,2DAAc;AACtB;AACA;AACA;AACA;AACA;AACA;;AAE8C;;;;;;;UC5C9C;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNsC;AACkC;AAW7C;AAC4B;;AAEvD;AACA,UAAU,UAAU,EAAE,+CAAI;;AAE1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,qEAAkB;;AAEpB;AACA;;AAEA;AACA,IAAI,iEAAc;;AAElB;AACA;AACA;AACA;;AAEA,yCAAyC,WAAW;AACpD;AACA,0DAA0D,WAAW;AACrE;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,gEAAc;AACtB;AACA;;AAEA;AACA,QAAQ,4DAAU;AAClB;AACA;;AAEA;AACA,QAAQ,0DAAQ;AAChB;AACA;;AAEA;AACA,QAAQ,6DAAW;AACnB;AACA;;AAEA;AACA,QAAQ,4DAAU;AAClB;AACA;;AAEA;AACA;AACA,UAAU,8DAAY;AACtB;AACA;AACA;AACA,UAAU,8DAAY;AACtB;AACA;AACA;;AAEA;AACA;AACA,UAAU,6DAAW;AACrB;AACA;AACA;AACA,UAAU,6DAAW;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,yCAAyC,WAAW;AACpD;AACA,yCAAyC,WAAW;AACpD,OAAO;AACP;;AAEA;AACA,MAAM,yDAAS;AACf;;AAEA;AACA,MAAM,yDAAS;AACf;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,gEAAc;AACtB;AACA;;AAEA;AACA,QAAQ,4DAAU;AAClB;AACA;;AAEA;AACA,QAAQ,0DAAQ;AAChB;AACA;;AAEA;AACA,QAAQ,6DAAW;AACnB;AACA;;AAEA;AACA,QAAQ,4DAAU;AAClB;AACA;;AAEA;AACA;AACA,UAAU,8DAAY;AACtB;AACA;AACA;AACA,UAAU,8DAAY;AACtB;AACA;AACA;;AAEA;AACA;AACA,UAAU,6DAAW;AACrB;AACA;AACA;AACA,UAAU,6DAAW;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA,MAAM,yDAAS;AACf;;AAEA;AACA,MAAM,yDAAS;AACf;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC","sources":["webpack://virtual-keyboard/./src/modules/createKeyboard.js","webpack://virtual-keyboard/./src/modules/data.js","webpack://virtual-keyboard/./src/modules/keydown.js","webpack://virtual-keyboard/./src/modules/keyup.js","webpack://virtual-keyboard/./src/modules/language.js","webpack://virtual-keyboard/webpack/bootstrap","webpack://virtual-keyboard/webpack/runtime/define property getters","webpack://virtual-keyboard/webpack/runtime/hasOwnProperty shorthand","webpack://virtual-keyboard/webpack/runtime/make namespace object","webpack://virtual-keyboard/./src/script.js"],"sourcesContent":["import { data } from './data';\n\nconst createKeyBoard = (keyData) => {\n  const keyboard = document.querySelector('.keyboard');\n  keyboard.innerHTML = '';\n\n  keyData.forEach((key, index) => {\n    if (index === 14 || index === 29 || index === 42 || index === 55) {\n      keyboard.innerHTML += '<br>';\n    }\n\n    const keyElement = document.createElement('button');\n    keyElement.classList.add('keyboard__key');\n    keyElement.setAttribute('data', `${data.keyCode[index]}`);\n\n    if (index === 14) {\n      keyElement.classList.add('keyboard__key_wide-s');\n    }\n\n    if (index === 41 || index === 54) {\n      keyElement.classList.add('keyboard__key_wide-m');\n    }\n\n    if (index === 13 || index === 29 || index === 42) {\n      keyElement.classList.add('keyboard__key_wide-x');\n    }\n\n    if (index === 58) {\n      keyElement.classList.add('space_key');\n    }\n\n    keyElement.textContent = key;\n    keyboard.append(keyElement);\n  });\n};\n\nexport default createKeyBoard;\n","const data = {\n  keyLayoutRu: [\n    'ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n    'Tab', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', '\\\\', 'Del',\n    'CapsLock', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'Enter',\n    'Shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '.', '↑', 'Shift',\n    'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl',\n  ],\n  keyLayoutRuShift: [\n    'Ё', '!', '\"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+', 'Backspace',\n    'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'Э', 'Х', 'Ъ', '/', 'Del',\n    'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter',\n    'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '↑', 'Shift',\n    'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl',\n  ],\n  keyLayoutEn: [\n    '`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n    'Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\', 'Del',\n    'CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', '\\'', 'Enter',\n    'Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '↑', 'Shift',\n    'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl',\n  ],\n  keyLayoutEnShift: [\n    '~', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', 'Backspace',\n    'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', '|', 'Del',\n    'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter',\n    'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?', '↑', 'Shift',\n    'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl',\n  ],\n  keyCode: [\n    'Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace',\n    'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Backslash', 'Delete',\n    'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Enter',\n    'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight',\n    'ControlLeft', 'MetaLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight',\n  ],\n};\n\nconst toUpperKeys = (keys) => {\n  const array = [];\n  keys.forEach((key, index) => {\n    if (key.length === 1) {\n      array[index] = key.toUpperCase();\n    } else {\n      array[index] = key;\n    }\n  });\n  return array;\n};\n\nconst toLowerKeys = (keys) => {\n  const array = [];\n  keys.forEach((key, index) => {\n    if (key.length === 1) {\n      array[index] = key.toLowerCase();\n    } else {\n      array[index] = key;\n    }\n  });\n  return array;\n};\n\nexport { data, toUpperKeys, toLowerKeys };\n","import { data, toLowerKeys, toUpperKeys } from './data';\nimport createKeyBoard from './createKeyboard';\n\nconst {\n  keyLayoutRu, keyLayoutEn, keyLayoutEnShift, keyLayoutRuShift,\n} = data;\n\nconst pressBackspace = (pointer) => {\n  const textarea = document.querySelector('.input');\n  textarea.value = textarea.value.slice(0, pointer - 1)\n    + textarea.value.slice(pointer);\n  textarea.setSelectionRange(pointer - 1, pointer - 1);\n};\n\nconst pressSpace = (pointer) => {\n  const textarea = document.querySelector('.input');\n  textarea.value = `${textarea.value.slice(0, pointer)} ${textarea.value.slice(pointer)}`;\n  textarea.setSelectionRange(pointer + 1, pointer + 1);\n};\n\nconst pressTab = (pointer) => {\n  const textarea = document.querySelector('.input');\n  textarea.value = `${textarea.value.slice(0, pointer)}    ${textarea.value.slice(pointer)}`;\n  textarea.setSelectionRange(pointer + 4, pointer + 4);\n};\n\nconst pressDelete = (pointer) => {\n  const textarea = document.querySelector('.input');\n  textarea.value = textarea.value.slice(0, pointer)\n    + textarea.value.slice(pointer + 1);\n  textarea.setSelectionRange(pointer, pointer);\n};\n\nconst pressEnter = (pointer) => {\n  const textarea = document.querySelector('.input');\n  textarea.value = `${textarea.value.slice(0, pointer)}\\n${textarea.value.slice(pointer)}`;\n  textarea.setSelectionRange(pointer + 1, pointer + 1);\n};\n\nconst pressShiftRu = (shift) => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toLowerKeys(keyLayoutRuShift));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n    document.querySelector(`[data = '${shift}'`).classList.add('keyboard__key_active');\n  } else {\n    createKeyBoard(keyLayoutRuShift);\n    document.querySelector(`[data = '${shift}'`).classList.add('keyboard__key_active');\n  }\n};\n\nconst pressShiftEn = (shift) => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toLowerKeys(keyLayoutEnShift));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n    document.querySelector(`[data = '${shift}'`).classList.add('keyboard__key_active');\n  } else {\n    createKeyBoard(keyLayoutEnShift);\n    document.querySelector(`[data = '${shift}'`).classList.add('keyboard__key_active');\n  }\n};\n\nconst pressCapsRu = () => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toLowerKeys(keyLayoutRu));\n    document.querySelector('[data = \"CapsLock\"]').classList.remove('caps_active');\n  } else {\n    createKeyBoard(toUpperKeys(keyLayoutRu));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n  }\n};\n\nconst pressCapsEn = () => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toLowerKeys(keyLayoutEn));\n    document.querySelector('[data = \"CapsLock\"]').classList.remove('caps_active');\n  } else {\n    createKeyBoard(toUpperKeys(keyLayoutEn));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n  }\n};\n\nexport {\n  pressBackspace,\n  pressSpace,\n  pressTab,\n  pressDelete,\n  pressEnter,\n  pressShiftRu,\n  pressShiftEn,\n  pressCapsRu,\n  pressCapsEn,\n};\n","import { data, toUpperKeys } from './data';\nimport createKeyBoard from './createKeyboard';\n\nconst { keyLayoutRu, keyLayoutEn } = data;\n\nconst upShiftRu = () => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toUpperKeys(keyLayoutRu));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n  } else {\n    createKeyBoard(keyLayoutRu);\n  }\n};\n\nconst upShiftEn = () => {\n  if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n    createKeyBoard(toUpperKeys(keyLayoutEn));\n    document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n  } else {\n    createKeyBoard(keyLayoutEn);\n  }\n};\n\nexport { upShiftRu, upShiftEn };\n","import createKeyBoard from './createKeyboard';\nimport { data, toUpperKeys } from './data';\n\nconst { keyLayoutRu, keyLayoutEn } = data;\n\nconst setDefaultLanguage = () => {\n  if (localStorage.getItem('language') === null || localStorage.getItem('language') === 'Ru') {\n    localStorage.setItem('language', 'Ru');\n    createKeyBoard(keyLayoutRu);\n  } else {\n    createKeyBoard(keyLayoutEn);\n  }\n};\n\nconst changeLanguage = (event) => {\n  if ((event.code === 'ControlLeft' && event.altKey) || (event.code === 'AltLeft' && event.ctrlKey)) {\n    if (localStorage.getItem('language') === 'Ru') {\n      localStorage.setItem('language', 'En');\n      if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n        createKeyBoard(toUpperKeys(keyLayoutEn));\n        document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n        document.querySelector('[data = \"ControlLeft\"]').classList.add('keyboard__key_active');\n        document.querySelector('[data = \"AltLeft\"]').classList.add('keyboard__key_active');\n      } else {\n        createKeyBoard(keyLayoutEn);\n        document.querySelector('[data = \"ControlLeft\"]').classList.add('keyboard__key_active');\n        document.querySelector('[data = \"AltLeft\"]').classList.add('keyboard__key_active');\n      }\n    } else {\n      localStorage.setItem('language', 'Ru');\n      if (document.querySelector('[data = \"CapsLock\"]').classList.contains('caps_active')) {\n        createKeyBoard(toUpperKeys(keyLayoutRu));\n        document.querySelector('[data = \"CapsLock\"]').classList.add('caps_active');\n        document.querySelector('[data = \"ControlLeft\"]').classList.add('keyboard__key_active');\n        document.querySelector('[data = \"AltLeft\"]').classList.add('keyboard__key_active');\n      } else {\n        createKeyBoard(keyLayoutRu);\n        document.querySelector('[data = \"ControlLeft\"]').classList.add('keyboard__key_active');\n        document.querySelector('[data = \"AltLeft\"]').classList.add('keyboard__key_active');\n      }\n    }\n  }\n};\n\nexport { setDefaultLanguage, changeLanguage };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { data } from './modules/data';\nimport { setDefaultLanguage, changeLanguage } from './modules/language';\nimport {\n  pressBackspace,\n  pressSpace,\n  pressTab,\n  pressDelete,\n  pressEnter,\n  pressShiftRu,\n  pressShiftEn,\n  pressCapsRu,\n  pressCapsEn,\n} from './modules/keydown';\nimport { upShiftRu, upShiftEn } from './modules/keyup';\n\nwindow.addEventListener('DOMContentLoaded', function () {\n  const { keyCode } = data;\n\n  const createNode = (element, ...classes) => {\n    const node = document.createElement(element);\n    node.classList.add(classes);\n    return node;\n  };\n\n  const appendNodeToDom = (domNode, ...newNode) => {\n    newNode.forEach((node) => {\n      domNode.append(node);\n    });\n  };\n\n  const createContainer = createNode('div', 'container');\n  const createTitle = createNode('h1', 'title');\n  createTitle.textContent = 'RSS Виртуальная клавиатура';\n  const createTextarea = createNode('textarea', 'input');\n  const createKeyboard = createNode('div', 'keyboard');\n  const createDescription = createNode('div', 'description');\n  const createOperatingSystem = createNode('div', 'oparating-system');\n  createOperatingSystem.textContent = 'Клавиатура создана в операционной системе Windows';\n  const createLanguage = createNode('div', 'language');\n  createLanguage.textContent = 'Для переключения языка комбинация: левыe ctrl + alt';\n\n  appendNodeToDom(this.document.body, createContainer);\n  appendNodeToDom(createContainer, createTitle, createTextarea, createKeyboard, createDescription);\n  appendNodeToDom(createDescription, createOperatingSystem, createLanguage);\n\n  setDefaultLanguage();\n\n  const keyboard = document.querySelector('.keyboard');\n  const textarea = document.querySelector('.input');\n\n  document.addEventListener('keydown', (event) => {\n    changeLanguage(event);\n\n    if (keyCode.indexOf(event.code) === -1) {\n      event.preventDefault();\n      return;\n    }\n\n    if (document.querySelector(`[data='${event.code}']`)) {\n      event.preventDefault();\n      const pressedKey = document.querySelector(`[data='${event.code}']`);\n      pressedKey.classList.add('keyboard__key_active');\n\n      if (event.key === 'Control' || event.key === 'Alt' || event.key === 'Meta') {\n        return;\n      }\n\n      const currentPointer = textarea.selectionStart;\n\n      if (event.code === 'Backspace') {\n        if (currentPointer === 0) {\n          return;\n        }\n        pressBackspace(currentPointer);\n        return;\n      }\n\n      if (event.code === 'Space') {\n        pressSpace(currentPointer);\n        return;\n      }\n\n      if (event.code === 'Tab') {\n        pressTab(currentPointer);\n        return;\n      }\n\n      if (event.code === 'Delete') {\n        pressDelete(currentPointer);\n        return;\n      }\n\n      if (event.code === 'Enter') {\n        pressEnter(currentPointer);\n        return;\n      }\n\n      if (event.key === 'Shift') {\n        if (localStorage.getItem('language') === 'Ru') {\n          pressShiftRu(event.code);\n          return;\n        }\n        if (localStorage.getItem('language') === 'En') {\n          pressShiftEn(event.code);\n          return;\n        }\n      }\n\n      if (event.code === 'CapsLock') {\n        if (localStorage.getItem('language') === 'Ru') {\n          pressCapsRu();\n          return;\n        }\n        if (localStorage.getItem('language') === 'En') {\n          pressCapsEn();\n          return;\n        }\n      }\n\n      textarea.value = textarea.value.slice(0, currentPointer)\n        + pressedKey.textContent + textarea.value.slice(currentPointer);\n      textarea.setSelectionRange(currentPointer + 1, currentPointer + 1);\n    }\n  });\n\n  document.addEventListener('keyup', (event) => {\n    if (document.querySelector(`[data='${event.code}']`)) {\n      setTimeout(() => {\n        document.querySelector(`[data='${event.code}']`).classList.remove('keyboard__key_active');\n      }, 200);\n    }\n\n    if (localStorage.getItem('language') === 'Ru' && event.key === 'Shift') {\n      upShiftRu();\n    }\n\n    if (localStorage.getItem('language') === 'En' && event.key === 'Shift') {\n      upShiftEn();\n    }\n  });\n\n  keyboard.addEventListener('mousedown', (event) => {\n    if (event.target.classList.contains('keyboard__key')) {\n      event.preventDefault();\n      event.target.classList.add('keyboard__key_active');\n      event.target.classList.remove('keyboard__key_hover');\n\n      if (event.target.textContent === 'Ctrl' || event.target.textContent === 'Alt' || event.target.textContent === 'Win') {\n        return;\n      }\n\n      const currentPointer = textarea.selectionStart;\n\n      if (event.target.getAttribute('data') === 'Backspace') {\n        if (currentPointer === 0) {\n          return;\n        }\n        pressBackspace(currentPointer);\n        return;\n      }\n\n      if (event.target.getAttribute('data') === 'Space') {\n        pressSpace(currentPointer);\n        return;\n      }\n\n      if (event.target.getAttribute('data') === 'Tab') {\n        pressTab(currentPointer);\n        return;\n      }\n\n      if (event.target.getAttribute('data') === 'Delete') {\n        pressDelete(currentPointer);\n        return;\n      }\n\n      if (event.target.getAttribute('data') === 'Enter') {\n        pressEnter(currentPointer);\n        return;\n      }\n\n      if (event.target.textContent === 'Shift') {\n        if (localStorage.getItem('language') === 'Ru') {\n          pressShiftRu(event.target.getAttribute('data'));\n          return;\n        }\n        if (localStorage.getItem('language') === 'En') {\n          pressShiftEn(event.target.getAttribute('data'));\n          return;\n        }\n      }\n\n      if (event.target.getAttribute('data') === 'CapsLock') {\n        if (localStorage.getItem('language') === 'Ru') {\n          pressCapsRu();\n          return;\n        }\n        if (localStorage.getItem('language') === 'En') {\n          pressCapsEn();\n          return;\n        }\n      }\n\n      textarea.value = textarea.value.slice(0, currentPointer)\n        + event.target.textContent + textarea.value.slice(currentPointer);\n      textarea.setSelectionRange(currentPointer + 1, currentPointer + 1);\n    }\n  });\n\n  document.addEventListener('mouseup', (event) => {\n    document.querySelectorAll('.keyboard__key').forEach((item) => {\n      setTimeout(() => {\n        item.classList.remove('keyboard__key_active');\n      }, 200);\n    });\n\n    if (localStorage.getItem('language') === 'Ru' && event.target.textContent === 'Shift') {\n      upShiftRu();\n    }\n\n    if (localStorage.getItem('language') === 'En' && event.target.textContent === 'Shift') {\n      upShiftEn();\n    }\n  });\n\n  keyboard.addEventListener('mouseover', (event) => {\n    if (event.target.classList.contains('keyboard__key')) {\n      event.target.classList.add('keyboard__key_hover');\n    }\n  });\n\n  keyboard.addEventListener('mouseout', (event) => {\n    if (event.target.classList.contains('keyboard__key')) {\n      event.target.classList.remove('keyboard__key_hover');\n    }\n  });\n});\n"],"names":[],"sourceRoot":""}